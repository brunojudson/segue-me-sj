<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	lang="pt-BR" xml:lang="pt-BR">

<ui:define name="title">Visualizar Casal - #{casalController.casal.pessoa1.nome} e #{casalController.casal.pessoa2.nome}</ui:define>

<ui:composition template="/templates/template.xhtml">
	<ui:define name="content">
		<style>
			/* Cabeçalho do casal */
			.casal-header {
				background: linear-gradient(135deg, #e91e63 0%, #f06292 100%);
				color: white;
				padding: 2rem;
				border-radius: 20px 20px 0 0;
				margin: -1rem -1rem 0 -1rem;
				box-shadow: 0 8px 32px rgba(233, 30, 99, 0.3);
				position: relative;
				overflow: hidden;
			}

			.casal-header::before {
				content: '';
				position: absolute;
				top: -50%;
				right: -20%;
				width: 300px;
				height: 300px;
				background: rgba(255, 255, 255, 0.1);
				border-radius: 50%;
				backdrop-filter: blur(10px);
			}

			.casal-header h2 {
				margin: 0;
				font-size: 2rem;
				font-weight: 700;
				position: relative;
				z-index: 2;
			}

			.casal-subtitle {
				opacity: 0.9;
				font-size: 1.1rem;
				margin-top: 0.5rem;
				position: relative;
				z-index: 2;
			}

			.casal-meta {
				display: flex;
				flex-wrap: wrap;
				gap: 1rem;
				margin-top: 1rem;
				position: relative;
				z-index: 2;
			}

			.meta-badge {
				background: rgba(255, 255, 255, 0.2);
				padding: 0.5rem 1rem;
				border-radius: 20px;
				font-size: 0.9rem;
				backdrop-filter: blur(10px);
				border: 1px solid rgba(255, 255, 255, 0.3);
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			/* Layout principal com foto */
			.casal-content {
				display: grid;
				grid-template-columns: 1fr 250px;
				gap: 2rem;
				background: white;
				border-radius: 0 0 20px 20px;
				padding: 2rem;
				box-shadow: 0 4px 20px rgba(0,0,0,0.08);
				margin: 0 -1rem -1rem -1rem;
			}

			.casal-photo-section {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 1rem;
				background: linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%);
				padding: 2rem 1rem;
				border-radius: 20px;
				box-shadow: 0 4px 15px rgba(0,0,0,0.05);
			}

			.casal-photo {
				max-width: 200px;
				max-height: 200px;
				border-radius: 15px;
				object-fit: cover;
				border: 4px solid #fff;
				box-shadow: 0 8px 25px rgba(0,0,0,0.15);
				transition: all 0.3s ease;
			}

			.casal-photo:hover {
				transform: scale(1.05);
				box-shadow: 0 12px 35px rgba(0,0,0,0.25);
			}

			.photo-placeholder {
				width: 200px;
				height: 200px;
				border-radius: 15px;
				background: linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%);
				display: flex;
				align-items: center;
				justify-content: center;
				color: #e91e63;
				font-size: 4rem;
				border: 4px solid #fff;
				box-shadow: 0 8px 25px rgba(0,0,0,0.15);
			}

			/* Grid de informações */
			.info-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
				gap: 1.5rem;
			}

			.info-item {
				background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
				padding: 1.5rem;
				border-radius: 15px;
				border-left: 5px solid #e91e63;
				transition: all 0.3s ease;
				box-shadow: 0 2px 10px rgba(0,0,0,0.05);
				animation: fadeInUp 0.6s ease-out;
			}

			.info-item:hover {
				background: linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%);
				transform: translateY(-2px);
				box-shadow: 0 8px 25px rgba(233, 30, 99, 0.15);
			}

			.info-label {
				font-weight: 700;
				color: #424242;
				font-size: 0.85rem;
				text-transform: uppercase;
				letter-spacing: 0.5px;
				margin-bottom: 0.75rem;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			.info-value {
				font-size: 1.1rem;
				color: #212121;
				font-weight: 500;
				word-break: break-word;
				line-height: 1.4;
			}

			.info-value.highlight {
				color: #e91e63;
				font-weight: 600;
			}

			/* Seção específica do casal */
			.casal-info {
				display: grid;
				grid-template-columns: 1fr 1fr;
				gap: 2rem;
				margin-bottom: 2rem;
			}

			.spouse-card {
				background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
				padding: 2rem;
				border-radius: 20px;
				border-top: 5px solid #e91e63;
				box-shadow: 0 4px 15px rgba(0,0,0,0.05);
				transition: all 0.3s ease;
			}

			.spouse-card:hover {
				transform: translateY(-5px);
				box-shadow: 0 12px 30px rgba(233, 30, 99, 0.15);
			}

			.spouse-title {
				font-size: 1.3rem;
				font-weight: 700;
				color: #e91e63;
				margin-bottom: 1rem;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			.spouse-name {
				font-size: 1.5rem;
				font-weight: 600;
				color: #212121;
				margin-bottom: 0.5rem;
			}

			.spouse-phone {
				color: #666;
				font-size: 1rem;
				display: flex;
				align-items: center;
				gap: 0.5rem;
			}

			/* Botões melhorados */
			.form-buttons {
				display: flex;
				gap: 1rem;
				justify-content: center;
				margin-top: 2rem;
				padding: 2rem;
				background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
				border-radius: 15px;
				box-shadow: 0 4px 15px rgba(0,0,0,0.05);
			}

			.form-buttons .ui-button {
				padding: 1rem 2rem;
				border-radius: 25px;
				font-weight: 600;
				transition: all 0.3s ease;
				box-shadow: 0 4px 15px rgba(0,0,0,0.1);
				border: none;
			}

			.form-buttons .ui-button:hover {
				transform: translateY(-3px);
				box-shadow: 0 8px 25px rgba(0,0,0,0.2);
			}

			/* Estados vazios */
			.empty-value {
				color: #9e9e9e;
				font-style: italic;
				font-size: 0.95rem;
			}

			/* Responsividade */
			@media (max-width: 768px) {
				.casal-content {
					grid-template-columns: 1fr;
					gap: 1.5rem;
					padding: 1.5rem;
				}

				.casal-photo-section {
					order: -1;
					padding: 1.5rem 1rem;
				}

				.casal-info {
					grid-template-columns: 1fr;
					gap: 1rem;
				}

				.info-grid {
					grid-template-columns: 1fr;
					gap: 1rem;
				}

				.form-buttons {
					flex-direction: column;
					align-items: stretch;
				}

				.casal-header {
					padding: 1.5rem;
					margin: -0.5rem -0.5rem 0 -0.5rem;
				}

				.casal-header h2 {
					font-size: 1.5rem;
				}

				.casal-meta {
					flex-direction: column;
					gap: 0.5rem;
				}
			}

			/* Animações */
			@keyframes fadeInUp {
				from {
					opacity: 0;
					transform: translateY(30px);
				}
				to {
					opacity: 1;
					transform: translateY(0);
				}
			}

			/* Print styles */
			@media print {
				.form-buttons {
					display: none !important;
				}
				
				.casal-header {
					background: #fff !important;
					color: #000 !important;
					box-shadow: none !important;
				}
			}
		</style>

		<div class="content-container">
			<div class="form-container">
				<!-- Cabeçalho do Casal -->
				<div class="casal-header">
					<h2>
						<i class="pi pi-heart"></i>
						#{casalController.casal.pessoa1.nome} &amp; #{casalController.casal.pessoa2.nome}
					</h2>
					<div class="casal-subtitle">
						Casal
					</div>
					<div class="casal-meta">
						<div class="meta-badge">
							<i class="pi pi-calendar"></i>
							<h:outputText value="#{casalController.casal.dataCasamento}" rendered="#{casalController.casal.dataCasamento != null}">
								<f:converter converterId="localDateConverter" />
							</h:outputText>
							<h:outputText value="Data não informada" rendered="#{casalController.casal.dataCasamento == null}" />
						</div>
					</div>
				</div>

				<h:form id="visualizarForm">
					<f:metadata>
						<f:viewParam name="id" />
						<f:viewAction action="#{casalController.carregarCasal}"
							if="#{not empty param.id}" />
					</f:metadata>

					<!-- Conteúdo Principal -->
					<div class="casal-content">
						<!-- Seção de Informações -->
						<div class="casal-info-section">
							<!-- Cards dos Cônjuges -->
							<div class="casal-info">
								<div class="spouse-card">
									<div class="spouse-title">
										<i class="pi pi-male"></i>Esposo
									</div>
									<div class="spouse-name">
										<h:outputText value="#{casalController.casal.pessoa1.nome}" rendered="#{casalController.casal.pessoa1 != null}" />
										<h:outputText value="Não informado" rendered="#{casalController.casal.pessoa1 == null}" styleClass="empty-value" />
									</div>
									<div class="spouse-phone">
										<i class="pi pi-phone"></i>
										<h:outputText value="#{casalController.casal.pessoa1.telefone}" rendered="#{casalController.casal.pessoa1 != null and casalController.casal.pessoa1.telefone != null and not empty casalController.casal.pessoa1.telefone}" />
										<h:outputText value="Telefone não informado" rendered="#{casalController.casal.pessoa1 == null or casalController.casal.pessoa1.telefone == null or empty casalController.casal.pessoa1.telefone}" styleClass="empty-value" />
									</div>
								</div>

								<div class="spouse-card">
									<div class="spouse-title">
										<i class="pi pi-female"></i>Esposa
									</div>
									<div class="spouse-name">
										<h:outputText value="#{casalController.casal.pessoa2.nome}" rendered="#{casalController.casal.pessoa2 != null}" />
										<h:outputText value="Não informado" rendered="#{casalController.casal.pessoa2 == null}" styleClass="empty-value" />
									</div>
									<div class="spouse-phone">
										<i class="pi pi-phone"></i>
										<h:outputText value="#{casalController.casal.pessoa2.telefone}" rendered="#{casalController.casal.pessoa2 != null and casalController.casal.pessoa2.telefone != null and not empty casalController.casal.pessoa2.telefone}" />
										<h:outputText value="Telefone não informado" rendered="#{casalController.casal.pessoa2 == null or casalController.casal.pessoa2.telefone == null or empty casalController.casal.pessoa2.telefone}" styleClass="empty-value" />
									</div>
								</div>
							</div>

							<!-- Grid de Informações Gerais -->
							<div class="info-grid">
								<div class="info-item">
									<div class="info-label">
										<i class="pi pi-calendar"></i>Data de Casamento
									</div>
									<div class="info-value">
										<h:outputText value="#{casalController.casal.dataCasamento}" rendered="#{casalController.casal.dataCasamento != null}">
											<f:converter converterId="localDateConverter" />
										</h:outputText>
										<h:outputText value="Não informado" rendered="#{casalController.casal.dataCasamento == null}" styleClass="empty-value" />
									</div>
								</div>

								<div class="info-item">
									<div class="info-label">
										<i class="pi pi-comment"></i>Observações
									</div>
									<div class="info-value">
										<h:outputText value="#{casalController.casal.observacoes}" rendered="#{casalController.casal.observacoes != null and not empty casalController.casal.observacoes}" />
										<h:outputText value="Sem observações" rendered="#{casalController.casal.observacoes == null or empty casalController.casal.observacoes}" styleClass="empty-value" />
									</div>
								</div>
							</div>
						</div>

						<!-- Seção da Foto -->
						<div class="casal-photo-section">
							<p:graphicImage value="#{casalController.foto}" alt="Foto do Casal"
								styleClass="casal-photo" 
								rendered="#{casalController.foto != null}" />
							<h:panelGroup rendered="#{casalController.foto == null}" styleClass="photo-placeholder">
								<i class="pi pi-heart"></i>
							</h:panelGroup>
						</div>
					</div>

					<!-- Botões de Ação -->
					<div class="form-buttons">
						<p:commandButton value="Gerar Ficha"
							styleClass="ui-button-success" ajax="false"
							action="#{casalController.gerarFichaInscricao(casalController.casal)}" />
						<p:button value="Editar" outcome="/pages/casal/cadastro.xhtml"
							icon="pi pi-pencil" styleClass="ui-button-warning">
							<f:param name="id" value="#{casalController.casal.id}" />
						</p:button>
						<p:button value="Voltar" outcome="/pages/casal/lista.xhtml"
							icon="pi pi-arrow-left" styleClass="ui-button-secondary" />
					</div>
				</h:form>
			</div>
		</div>
	</ui:define>
</ui:composition>

</html>
